#!/bin/bash

get_scaffold() {
    [ ! -d .git ] && git init
    git submodule add http://github.com/minond/scaffold vendor/minond/scaffold
    cp vendor/minond/scaffold/grunt/Gruntfile.js ./
}

copy_project_files() {
    local type=$1
    [ ! -f .gitignore ] && cp vendor/minond/scaffold/projects/.gitignore ./
    [ ! -f .travis.yml ] && cp vendor/minond/scaffold/projects/travis-$type.yml .travis.yml
    [ ! -f package.json ] && cp vendor/minond/scaffold/projects/package.json ./
    sed -i "s/NAME/$(basename `pwd`)/" package.json
}

set_build_type() {
    [ ! -d config ] && mkdir config
    [ ! -f config/build.yml ] && echo "type: $1" > config/build.yml
}

mkdirs() {
    for dir in "$@"; do
        [ ! -d "$dir" ] && mkdir "$dir"
    done
}

cdmkdir() {
    local dir=$1
    [ ! -d $dir ] && mkdir $dir
    cd $dir
}

case "$1" in
    node-module)
        echo creating js library structure
        set -x

        [ ! -z "$2" ] && cdmkdir $2

        mkdirs src tests config
        get_scaffold
        set_build_type node-module
        copy_project_files node-module

        npm install --save-dev coveralls expect.js glob grunt grunt-complexity \
            grunt-contrib-clean grunt-contrib-jshint grunt-exec grunt-mkdir \
            grunt-spell istanbul json5 load-grunt-tasks lodash merge-defaults mocha

        grunt
        ;;

    *)
        echo invalid argument. supported scaffolds:
        echo - node-module

        exit 1
        ;;
esac
